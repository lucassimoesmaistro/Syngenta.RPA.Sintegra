// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Syngenta.Sintegra.Repository;

namespace Syngenta.Sintegra.Repository.Migrations
{
    [DbContext(typeof(CustomerContext))]
    partial class CustomerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Syngenta.Sintegra.Domain.ChangeLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("RequestItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RequestItemId");

                    b.ToTable("ChangeLogs");
                });

            modelBuilder.Entity("Syngenta.Sintegra.Domain.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CPF")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("City")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("District")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Region")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Street")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Syngenta.Sintegra.Domain.Request", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("RequestStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RequestVerification");
                });

            modelBuilder.Entity("Syngenta.Sintegra.Domain.RequestItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerCNPJ")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("CustomerCPF")
                        .HasColumnType("varchar(11)");

                    b.Property<string>("CustomerCity")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CustomerCountry")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CustomerDistrict")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CustomerHouseNumber")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CustomerInscricaoEstadual")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CustomerPostalCode")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CustomerRegion")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CustomerStreet")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("RequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RequestItemStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("RequestItems");
                });

            modelBuilder.Entity("Syngenta.Sintegra.Domain.ChangeLog", b =>
                {
                    b.HasOne("Syngenta.Sintegra.Domain.RequestItem", "RequestItem")
                        .WithMany("ChangeLogs")
                        .HasForeignKey("RequestItemId")
                        .IsRequired();
                });

            modelBuilder.Entity("Syngenta.Sintegra.Domain.RequestItem", b =>
                {
                    b.HasOne("Syngenta.Sintegra.Domain.Request", "Request")
                        .WithMany("RequestItems")
                        .HasForeignKey("RequestId");
                });
#pragma warning restore 612, 618
        }
    }
}
